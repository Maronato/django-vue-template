version: "3.7"
services:
  grafana:
    deploy:
      labels:
        # Enable traefik
        - traefik.enable=true
        # Traefik constraints
        - traefik.tags=traefik-public
        # Use the proxy network for communication
        - traefik.docker.network=proxy
        # Grafana should live under grafana.DOMAIN
        - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)
        # Make sure the loadbalancer uses the correct port
        - traefik.http.services.grafana.loadbalancer.server.port=3000
        # Enable tls through Lets Encrypt
        - traefik.http.routers.grafana.tls=true
        - traefik.http.routers.grafana.tls.certresolver=le
        # Accept only https
        - traefik.http.routers.grafana.entrypoints=websecure
  prometheus:
    deploy:
      labels:
        # Enable traefik
        - traefik.enable=true
        # Traefik constraints
        - traefik.tags=traefik-public
        # Use the proxy network for communication
        - traefik.docker.network=proxy
        # Prometheus should live under prometheus.DOMAIN
        - traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)
        # Make sure the loadbalancer uses the correct port
        - traefik.http.services.prometheus.loadbalancer.server.port=9090
        # Enable tls through Lets Encrypt
        - traefik.http.routers.prometheus.tls=true
        - traefik.http.routers.prometheus.tls.certresolver=le
        # Accept only https
        - traefik.http.routers.prometheus.entrypoints=websecure
        # Lock prometheus behind an authentication layer since it does not have one
        - traefik.http.routers.prometheus.middlewares=prometheus_service_auth
        - traefik.http.middlewares.prometheus_service_auth.basicauth.usersfile=/run/secrets/prometheus_users
  portainer:
    deploy:
      labels:
        # Enable traefik
        - traefik.enable=true
        # Traefik constraints
        - traefik.tags=traefik-public
        # Use the proxy network for communication
        - traefik.docker.network=proxy
        # Portainer should live under portainer.DOMAIN
        - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
        # Make sure the loadbalancer uses the correct port
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        # Enable tls through Lets Encrypt
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.tls.certresolver=le
        # Accept only https
        - traefik.http.routers.portainer.entrypoints=websecure
